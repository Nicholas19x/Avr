local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()
local objectToDelete = game.Players.LocalPlayer.PlayerGui:FindFirstChild("Notification")
if objectToDelete then
    objectToDelete:Destroy()
end

local nameToNumber = {
    ["Itochi"] = 10,
    ["Roku Dark"] = 11,
    ["Goi"] = 12,
    ["Grim Wow"] = 14,
    ["Kokashi"] = 26,
    ["Genitsu"] = 27,
    ["Geno"] = 28,
    ["Inosake"] = 29,
    ["Gaari"] = 30,
    ["Alligator"] = 31,
    ["Kinnua"] = 32,
    ["Shinzi"] = 33,
    ["Pickleo"] = 34,
    ["Sprintwagon"] = 35,
    ["Ichiga"] = 36,
    ["Joe"] = 37,
    ["Jon"] = 38,
    ["Luffo"] = 39,
    ["Noruto"] = 40,
    ["Roku"] = 41,
    ["Rukio"] = 42,
    ["Sanjo"] = 43,
    ["Sosuke"] = 44,
    ["Vogita"] = 45,
}


local Window = OrionLib:MakeWindow({
    Name = "TEST HUB",
    HidePremium = false,
    IntroText = "TEST HUB",
    SaveConfig = true,
    ConfigFolder = "TEST HUB"
})

local Tab = Window:MakeTab({
    Name = "Gameplay",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local worldModel = player.PlayerGui:WaitForChild("Hotbar"):WaitForChild("Main"):WaitForChild("Units"):WaitForChild("1"):WaitForChild("UnitTemplate"):WaitForChild("Holder"):WaitForChild("Main"):WaitForChild("UnitImage"):WaitForChild("ViewportFrame"):WaitForChild("WorldModel")


local VectorP = {
    Vector3.new(129.33424377441406, 8.935784339904785, 122.03530883789062),
    Vector3.new(131.52040100097656, 8.935786247253418, 122.43047332763672),
    Vector3.new(131.06385803222656, 8.935786247253418, 120.1720199584961),
    Vector3.new(129.2808074951172, 8.935782432556152, 120.00386047363281),
    Vector3.new(10.48846435546875, 11.518414497375488, -5.366661071777344),
    Vector3.new(7.996025085449219, 11.518414497375488, -7.19559383392334),
    Vector3.new(10.063709259033203, 11.518414497375488, -7.86088752746582),
    Vector3.new(7.966606140136719, 11.518414497375488, -5.370272636413574),
    Vector3.new(-275.70599365234375, 2.063093900680542, -121.72444152832031),
    Vector3.new(-273.0750732421875, 2.063095808029175, -121.72998046875),
    Vector3.new(-273.1800537109375, 2.063093900680542, -119.09394836425781),
    Vector3.new(-276.15484619140625, 2.063091993331909, -119.13728332519531),
}
local function createArgs(numberValue, position)
    return {
        [1] = "Render",
        [2] = {
            [1] = "Units",
            [2] = numberValue,
            [3] = position,
            [4] = 0
        }
    }
end

return {
    createArgs = createArgs
}

local isActive = false
local isRunning = false

local function startLoop()
    if not isRunning then
        isRunning = true
        spawn(function()
            while isActive do
                for i, child in pairs(worldModel:GetChildren()) do
                    local name = child.Name
                    local numberValue = nameToNumber[name]
                    
                    if numberValue then
                        for _, position in ipairs(VectorP) do
                            local args = functions.createArgs(numberValue, position)
                            local success, errorMessage = pcall(function()
                                game:GetService("ReplicatedStorage").Networking.UnitEvent:FireServer(unpack(args))
                            end)

                            if not success then
                                warn("Error sending data to server: " .. errorMessage)
                            end

                            wait(0.2)
                        end
                    end
                end
                wait(0)
            end
            isRunning = false
        end)
    end
end

local function stopLoop()
    isActive = false
    wait(1)
    isRunning = false
end

Tab:AddToggle({
    Name = "Auto Story (not support mythic)",
    Default = false,
    Save = true,
    Callback = function(value)
        isActive = value
        if isActive then
            startLoop()
        else
            stopLoop()
        end
    end
})

local functionsSource, functions
local success, errorMessage = pcall(function()
    functionsSource = game:HttpGet('https://raw.githubusercontent.com/Nicholas19x/Avr/main/Auto%20upgrade')
    functions = loadstring(functionsSource)()
end)

if not success then
    warn("Error loading functions: " .. errorMessage)
else
    local isRunning = false
    local looping = false

    Tab:AddToggle({
        Name = "Enable Auto Upgrade",
        Default = false,
        Callback = function(value)
            isRunning = value

            if isRunning then
                if functions and functions.autoUpgradeLoop then
                    spawn(function()
                        functions.autoUpgradeLoop()
                    end)
                else
                    warn("autoUpgradeLoop function not found.")
                end
            end
        end
    })
